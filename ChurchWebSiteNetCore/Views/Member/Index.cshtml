
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var pagedList = (IPagedList)ViewBag.Members;
}

@using X.PagedList.Mvc.Core; @*import this so we get our HTML Helper*@
@using X.PagedList; @*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@using X.PagedList.Mvc.Common

<!-- import the included stylesheet for some (very basic) default styling
<link href="/css/PagedList.css" rel="stylesheet" type="text/css" />-->

<h1>Members</h1>

<!-- Modal placeholder -->
<div id="modal-placeholder"></div>

<!-- Button trigger modal -->
<button type="button" class="btn btn-success float-lg-right" data-toggle="ajax-modal" data-target="#add-member" data-url="@Url.Action("Create")">
    Add Member
</button>

@Html.PagedListPager(pagedList, page => Url.Action("Index", new { page = page, pageSize = 10 }))

@if (ViewBag.Members != null && ViewBag.Members.Count > 0)
{
    <div class="row">
        <div class="col-12">
            <table class="table table-striped fixed-table-body">
                <thead>
                    <tr>
                        <th scope="col">Member Id</th>
                        <th scope="col">First Name</th>
                        <th scope="col">Last Name</th>
                        <th scope="col">Family Name</th>
                        <th scope="col">Date Added</th>
                        <th scope="col">Date Changed</th>
                        <th scope="col" class="text-nowrap"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var name in ViewBag.Members)
                    {
                        <tr>
                            <td>@name.ContributorId</td>
                            <td>@name.FirstName</td>
                            <td>@name.LastName</td>
                            <td>@name.FamilyName</td>
                            <td>@name.DateAdded</td>
                            <td>@name.DateChanged</td>
                            <td class="text-nowrap">
                                <a class="btn btn-sm btn-primary" asp-controller="Member" asp-action="Details" asp-route-id="@name.ContributorId">View</a>
                                <a class="btn btn-sm btn-primary" asp-controller="Member" asp-action="Details" asp-route-id="@name.ContributorId">Edit</a>
                                <button type="button" id="delete-member-btn" data-id="@name.ContributorId" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#exampleModal">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

<!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
@Html.PagedListPager(pagedList, page => Url.Action("Index", new { page = page, pageSize = 10 }))


<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this transaction?
            </div>
            <div class="modal-footer">
                <!--<button type="button" id="btn-yes" class="btn btn-primary">Yes</button>-->
                <button type="button" id="mySubmit" class="btn btn-primary">Yes</button>
                <!--@Html.ActionLink("Yes", "Delete", "Member", new { @class = "btn btn-primary" })-->
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

@section scripts {

    <script type="text/javascript">
        var memberId;
        // $('#error-alert').hide();
        // $('#success-alert').hide();
        alert("sdfsdf");

        //Everytime we press delete in the table row
        $('.delete').click(function(e) {
            e.preventDefault();

            //Update the item to delete id so our model knows which one to delete
            var id = $(this).data('id');
            alert(id);
            $('#item-to-delete').val(id);
        });


        //Everytime we press sumbit on the modal form...
        $('#mySubmit').click(function() {

            //Get the id to delete from the hidden field
            var member = $('#item-to-delete').val();
            alert(member);

            var url = "/Member/Delete";
            $.post(@Url.Action("Delete", "Member"), { id = member }, function (data) {
                alert(data.message);
            }, 'json');

        });

        // all buttons with data-toggle equal to ajax-modal
        $('button[data-toggle="modal"]').click(function (event) {
            memberId = $(this).attr("data-id");
        });

        $('#btn-yes').click(function (event) {
            $.ajax({
                url: '/Member/Delete/',
                data: JSON.stringify(memberId),
                contentType: 'application/json',
                type: 'POST',
                success: function (data) {
                    $('#exampleModal').modal('hide');
                    if (!data.success)
                    {
                        $('#error-alert').show();
                        $('#error-message').html(data.message);
                        $("#error-alert").fadeTo(5000, 500).slideUp(500, function () {
                            $("#error-alert").slideUp(500);
                        });
                    }
                    else
                    {
                        $('#success-alert').show();
                        $('#success-message').html("Member successfully deleted.");
                        $("#success-alert").fadeTo(5000, 500).slideUp(500, function () {
                            $("#success-alert").slideUp(500);
                        });
                    }
                },
                error: function (request, status, error) {
                    $('#exampleModal').modal('hide');
                    $('#error-message').html("Unknown Error. Please contact System administrator for more details.");
                    $('#error-alert').show();
                    $("#error-alert").fadeTo(5000, 500).slideUp(500, function() {
                      $("#error-alert").slideUp(500);
                    });
                }
            });
        });

    </script>

}


