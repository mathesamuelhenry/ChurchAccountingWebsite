
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var pagedList = (IPagedList)ViewBag.Members;
}

@using X.PagedList.Mvc.Core; @*import this so we get our HTML Helper*@
@using X.PagedList; @*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@using X.PagedList.Mvc.Common

<!-- import the included stylesheet for some (very basic) default styling
<link href="/css/PagedList.css" rel="stylesheet" type="text/css" />-->

<h1>Members</h1>

@Html.PagedListPager(pagedList, page => Url.Action("Index", new { page = page, pageSize = 10 }))

@if (ViewBag.Members != null && ViewBag.Members.Count > 0)
{
    <div class="row">
        <div class="col-12">
            <table class="table table-striped fixed-table-body">
                <thead>
                    <tr>
                        <th scope="col">Member Id</th>
                        <th scope="col">First Name</th>
                        <th scope="col">Last Name</th>
                        <th scope="col">Family Name</th>
                        <th scope="col">Date Added</th>
                        <th scope="col">Date Changed</th>
                        <th scope="col" class="text-nowrap"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var name in ViewBag.Members)
                    {
                        <tr>
                            <td>@name.ContributorId</td>
                            <td>@name.FirstName</td>
                            <td>@name.LastName</td>
                            <td>@name.FamilyName</td>
                            <td>@name.DateAdded</td>
                            <td>@name.DateChanged</td>
                            <td class="text-nowrap">
                                <a class="btn btn-sm btn-primary" asp-controller="Member" asp-action="Details" asp-route-id="@name.ContributorId">View</a>
                                <a class="btn btn-sm btn-primary" asp-controller="Member" asp-action="Details" asp-route-id="@name.ContributorId">Edit</a>
                                <button type="button" id="delete-member-btn" data-id = "@name.ContributorId" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#exampleModal">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this transaction?
            </div>
            <div class="modal-footer">
                <button type="button" id="btn-yes" class="btn btn-primary">Yes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<p>Link 1</p>
<a data-toggle="modal" data-id="ISBN564541" title="Add this item" class="open-AddBookDialog btn btn-primary" href="#addBookDialog">test</a>

<p>&nbsp;</p>


<p>Link 2</p>
<a data-toggle="modal" data-id="ISBN-001122" title="Add this item" class="open-AddBookDialog btn btn-primary" href="#addBookDialog">test</a>

<div class="modal hide" id="addBookDialog">
    <div class="modal-header">
        <button class="close" data-dismiss="modal">×</button>
        <h3>Modal header</h3>
    </div>
    <div class="modal-body">
        <p>some content</p>
        <input type="text" name="bookId" id="bookId" value="" />
    </div>
</div>

<!-- output a paging control that lets the user navigation to the previous page, next page, etc
@Html.PagedListPager(pagedList, page => Url.Action("Index", new { page }))-->
@Html.PagedListPager(pagedList, page => Url.Action("Index", new { page = page, pageSize = 10 }))

@section scripts {

<script type="text/javascript">
    var delMemberId;

    $(document).ready(function () {
        var memberId;
            $('#delete-member-btn').click(function () {
                alert($('#delete-member-btn').val($(this).data('id')));
                // Here's our button
                var button = document.getElementById('delete-member-btn');
                // Get the values
                memberId = button.getAttribute('data-id');
                alert(memberId);
            });

            $('#btn-yes').click(function () {
                // Here's our button
                var button = document.getElementById('delete-member-btn');
                $.ajax({  
                type: "POST",  
                url: '@Url.Action("createStudent")',  
                data: '{std: ' + JSON.stringify(std) + '}',  
                dataType: "json",  
                contentType: "application/json; charset=utf-8",  
                success: function () {  
                   // alert("Data has been added successfully.");  
                    LoadData();  
                },  
                error: function () {  
                    alert("Error while inserting data");  
                }  
            });  
                $.ajax({
                    url: '/Member/Delete',
                    data: { id: memberId },
                    success: function () {  
                       // alert("Data has been added successfully.");  
                        LoadData();  
                    },  
                    error: function () {  
                        alert("Error while inserting data");  
                    }  
                });
            });
        });

</script>

}


