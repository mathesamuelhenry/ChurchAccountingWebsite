
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var pagedList = (IPagedList)ViewBag.Members;
}

@using X.PagedList.Mvc.Core; @*import this so we get our HTML Helper*@
@using X.PagedList; @*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@using X.PagedList.Mvc.Common

<!-- import the included stylesheet for some (very basic) default styling
<link href="/css/PagedList.css" rel="stylesheet" type="text/css" />-->

<h1>Members</h1>

@Html.PagedListPager(pagedList, page => Url.Action("Index", new { page = page, pageSize = 10 }))

@if (ViewBag.Members != null && ViewBag.Members.Count > 0)
{
    <div class="row">
        <div class="col-12">
            <table class="table table-striped fixed-table-body">
                <thead>
                    <tr>
                        <th scope="col">Member Id</th>
                        <th scope="col">First Name</th>
                        <th scope="col">Last Name</th>
                        <th scope="col">Family Name</th>
                        <th scope="col">Date Added</th>
                        <th scope="col">Date Changed</th>
                        <th scope="col" class="text-nowrap"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var name in ViewBag.Members)
                    {
                        <tr>
                            <td>@name.ContributorId</td>
                            <td>@name.FirstName</td>
                            <td>@name.LastName</td>
                            <td>@name.FamilyName</td>
                            <td>@name.DateAdded</td>
                            <td>@name.DateChanged</td>
                            <td class="text-nowrap">
                                <a class="btn btn-sm btn-primary" asp-controller="Member" asp-action="Detail1">View</a>
                                <a class="btn btn-sm btn-primary" asp-controller="Member" asp-action="Details">Edit</a>
                                <button type="button" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#exampleModal">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

<!-- output a paging control that lets the user navigation to the previous page, next page, etc
@Html.PagedListPager(pagedList, page => Url.Action("Index", new { page }))-->

@Html.PagedListPager(pagedList, page => Url.Action("Index", new { page = page, pageSize = 10 }))


